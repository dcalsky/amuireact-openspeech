!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("react")):"function"==typeof define&&define.amd?define(["react"],t):"object"==typeof exports?exports["react-openspeech"]=t(require("react")):e["react-openspeech"]=t(e.react)}(this,function(e){return function(e){function t(r){if(s[r])return s[r].exports;var o=s[r]={exports:{},id:r,loaded:!1};return e[r].call(o.exports,o,o.exports,t),o.loaded=!0,o.exports}var s={};return t.m=e,t.c=s,t.p="",t(0)}([function(e,t,s){"use strict";e.exports=s(1)},function(e,t,s){"use strict";function r(e){return e&&e.__esModule?e:{"default":e}}Object.defineProperty(t,"__esModule",{value:!0});var o=s(2),p=r(o),n=p["default"].createClass({displayName:"OpenspeechRecorder",propTypes:{signature:p["default"].PropTypes.string.isRequired,username:p["default"].PropTypes.string.isRequired,enable:p["default"].PropTypes.bool.isRequired,appid:p["default"].PropTypes.string.isRequired,timestamp:p["default"].PropTypes.string.isRequired,expires:p["default"].PropTypes.number.isRequired,url:p["default"].PropTypes.string,reconnection:p["default"].PropTypes.bool,resultType:p["default"].PropTypes.string,resultCharset:p["default"].PropTypes.string,punctuationType:p["default"].PropTypes.number,getVolume:p["default"].PropTypes.func,getResult:p["default"].PropTypes.func,getCurrentMessage:p["default"].PropTypes.func,vadPath:p["default"].PropTypes.string,recorderPath:p["default"].PropTypes.string,speexWorkerPath:p["default"].PropTypes.string},getDefaultProps:function(){return{enable:!1,expires:1e4,url:"http://webapi.openspeech.cn/",reconnection:!0,resultType:"json",resultCharset:"utf8",punctuationType:1,getVolume:function(e){},getResult:function(e,t){},getCurrentMessage:function(e){}}},componentWillReceiveProps:function(e,t){var s=e.enable!==t.enable&&e.enable;s?this._handleStartListen():this._handleStopListen()},componentWillUpdate:function(e,t){!this.state.enable&&t.enable&&this._initSession()},getInitialState:function(){return{loadCompleted:!1,session:null,ssbParam:{},result:null}},_initSession:function(){var e=new IFlyIatSession({url:this.props.url,reconnection:this.props.reconnection,reconnectionDelay:3e4,compress:"speex",vad_path:this.props.vadPath,recorder_path:this.props.recorderPath,speex_path:this.props.speexWorkerPath});this.setState({loadCompleted:!0,ssbParam:{grammar_list:null,params:"aue=speex-wb;-1, usr = "+this.props.username+", ssm = 1, sub = iat, net_type = wifi, rse = "+this.props.resultCharset+", ent =sms16k, rst = "+this.props.resultType+", auf  = audio/L16;rate=16000, vad_enable = 1, vad_timeout = 5000, vad_speech_tail = 500, compress = igzip, caller.appid = "+this.props.appid+", timestamp = "+this.props.timestamp+", expires = "+this.props.expires.toString(),signature:this.props.signature}}),this.setState({session:e})},componentWillMount:function(){if(void 0===IFlyIatSession)throw this.setState({loadCompleted:!1}),"Not loading correct the Openspeech modules!";if(!this.props.vadPath||!this.props.recorderPath||!this.props.speexWorkerPath)throw"Not setting url of compress libs!";this._initSession()},_getMessage:function(e){"onEnd"===e&&this.setState({enable:!1}),this.props.getCurrentMessage(e)},_handleStartListen:function(){this.state.session.start(this.state.ssbParam,this.props.getVolume,this.props.getResult,this.props.getCurrentMessage)},_handleStopListen:function(){this.state.session.stop()},render:function(){var e=this.props.style;return p["default"].createElement("div",{className:"am-openspeech-recorder",style:e},this.props.children)}});t["default"]=n},function(t,s){t.exports=e}])});
//# sourceMappingURL=amuireact-openspeech.js.map